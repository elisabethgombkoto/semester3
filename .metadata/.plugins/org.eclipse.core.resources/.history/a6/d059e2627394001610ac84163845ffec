package hue02.SortierAlgorithmen;

public class QuickSort implements Sort {

	@Override
	public Comparable[] sort(Comparable[] sortieren) {

		return quicksort(sortieren, 0, sortieren.length - 1);

	}

	private Comparable[] quicksort(Comparable[] daten, int left, int right) {
		if (left < right) {
			Comparable partition = partition(daten, left, right);
			quicksort(daten, left, partition - 1);
			quicksort(daten, partition + 1, right);
		}
		return daten;
	}

	private void partition(Comparable[] daten, int left, int right) {
		int l = left;
		int r = right;
		Comparable privot = daten[(l + r) / 2];
		while (left < right) {
			while (daten[l].compareTo(privot) < 0) {
				l++;
			}
			while (daten[l].compareTo(privot) > 0) {
				l--;
			}
		}

	}

}
