package hue02.SortierAlgorithmen;

public class InsertionSort implements Sort {

	@Override
	public Comparable[] sort(Comparable[] sortieren) {

		int feldzugriff = 0;
		int anzahlSchleifen =0;
		Comparable temp;
		for (int i = 1; i < sortieren.length; i++) {
			anzahlSchleifen++;
			temp = sortieren[i];
			feldzugriff++;
			int j = i;
			while (j > 0 && sortieren[j - 1].compareTo(temp) > 0)
				// a.compareTo(b) --> case >0 : a > b, case 0: a == b, case <0:
				// a <
				// b
				
			{
				feldzugriff++;
				anzahlSchleifen++;
				
				sortieren[j] = sortieren[j - 1];
				j--;
				feldzugriff += 2;

			}
			sortieren[j] = temp;
			feldzugriff++;
		}
		// Grobanalyse:
		System.out.println("Anzahl der Gesamtdurchlaeufe bei insertionSort der auseren for-Schleife:" + i);
		System.out.println("Anzahl der Gesamtdurchlauefe bei insertionSort der inneren for-Schleife:" + j);
		return sortieren;
	}

}
