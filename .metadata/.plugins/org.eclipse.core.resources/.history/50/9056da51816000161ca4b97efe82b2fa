//ego8769


package oo.ego8769.hue01.bsp01;

public class Stack {
	
	private int[] _array;
	private int _length=0;
	private int _top=-1;
	private int[] permutationArray;
	private int pCounter = 0;
	
	public Stack(int size){  //Konstruktor
		_top=-1;
		_length=size;
	_array=new int[_length];	
		
	}
	
		 

	public void push(int x){
		if(!isFull()){
		_top++;
		_array[_top]=x;
		}
	}
		
	
	public boolean isFull(){
		if (_top<=_array.length-1){
			return true;		//elegant lautet in eine zeiele das ganze
		}else{					//return(_top==s.length);
			return false;
		}
	}
		public boolean isEmpty(){
			if (_top==(-1)){
				return true;		//elegant lautet in eine zeiele das ganze
			}else{					//return(_top==0);
				return false;
			}
		}
		@SuppressWarnings("null")
		public int pop(){
			
			if(!isEmpty()){
			int temp=_array[_top];
				_top--;
				return temp;
			}
			return -1;
		}
		
		public int top() {
			if (!isEmpty()) return _array[_top];
			return -1;
		}
		
		public void permutation(int[] array) {
			permutationArray = array;
			pCounter = 0;
			
			for(int i = 1; i <= permutationArray.length; i++){
				push(i);
				checkPop();
			}	
			if (isEmpty()) {
				System.out.println("Geht");
			} else {
				System.out.println("Geht ned");
			}
		}
		
		private void checkPop(){
			if (pCounter < permutationArray.length) {
			if (permutationArray[pCounter] == top()){
				pop();
				pCounter++;
				checkPop();
			}
			}
		}
}
	
	
	
